name: "Flutter Build & Release"

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (Java 17, necessary for Android builds)
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Step 3: Set up Flutter environment
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Step 4: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 5: Set keystore environment variables
      - name: Set keystore environment variables
        run: |
          echo "KEYSTORE_FILE=${{ secrets.KEYSTORE_FILE }}" >> $GITHUB_ENV
          echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
          echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV

      # Step 6: Decode keystore file from base64
      - name: Decode keystore file
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > /tmp/release.keystore
          
      # Step 7: Add key.properties to your repository (use secrets or generate the file)
      - name: Create key.properties file
        run: |
          echo "storeFile=/tmp/release.keystore" > android/key.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties

      # Step 8: Build Android APK
      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      # Step 9: Build the IPA for iOS (without code signing)
      - name: Build iOS IPA
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          mv Runner.app Payload/
          zip -r app.ipa Payload

      # Step 10: Create GitHub Release and upload the build artifacts (APK & IPA)
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/apk/release/*,
            build/ios/iphoneos/app.ipa
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.GITHUB_TOKEN }}
