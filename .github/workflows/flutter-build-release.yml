name: "Flutter Build & Release"

on:
  push:
    branches:
      - main
      - master
      - develop
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # Step 3: Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 4: Decode Keystore
      - name: Decode and Save Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks

      # Step 5: Create key.properties
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=android/app/upload-keystore.jks" >> android/key.properties

      # Step 6: Build APK for Android
      - name: Build Android APK
        run: flutter build apk --release

      # Step 7: Build iOS IPA
      - name: Build iOS IPA
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          mv Runner.app Payload/
          zip -r app.ipa Payload
        if: runner.os == 'macOS'  # Ensure iOS build is only executed on macOS

      # Step 8: Create GitHub Release and upload the build artifacts (APK & IPA)
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/flutter-apk/app-release.apk
            build/ios/iphoneos/app.ipa
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}

      # Step 9: Cleanup sensitive files
      - name: Cleanup sensitive files
        run: |
          rm -f android/app/upload-keystore.jks
          rm -f android/key.properties
